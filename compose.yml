version: '3.6'

volumes:
  mongodb_data:
    driver: local
    driver_opts:
      o: 'bind'
      type: 'none'
      device: ${MONGOPATH:-./volumes/mongodb}
  rocketchat_uploads:
    driver: local
    driver_opts:
      o: 'bind'
      type: 'none'
      device: ${UPLOADSPATH:-./volumes/uploads}
  prometheus_data:
    driver: local
    driver_opts:
      o: 'bind'
      type: 'none'
      device: ${PROMETEUSPATH:-./volumes/prometheus}


networks:
  rocketchat_net:
    name: ${COMPOSE_PROJECT_NAME}_net
    external: true


services:
  
###########################
  mongodb:
    image: docker.io/bitnami/mongodb:${MONGODB_VERSION:-5.0}
    restart: unless-stopped
    volumes:
      - mongodb_data:/bitnami/mongodb
    environment:
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_NAME: rs0
      MONGODB_PORT_NUMBER: 27017
      MONGODB_INITIAL_PRIMARY_HOST: mongodb
      MONGODB_INITIAL_PRIMARY_PORT_NUMBER: 27017
      MONGODB_ADVERTISED_HOSTNAME: mongodb
      MONGODB_ENABLE_JOURNAL: true
      ALLOW_EMPTY_PASSWORD: yes
    labels:
      - "traefik.enable=false"
      
    networks:
      - rocketchat_net


###########################
  rocketchat:
    image: registry.rocket.chat/rocketchat/rocket.chat:${ROCKET_RELEASE}
    depends_on:
      - mongodb
    restart: unless-stopped
    
    command: /bin/sh -c 'INSTANCE_IP=$$(hostname -i) node main.js'
    
    environment:
      PORT: 3000
      MONGO_URL: mongodb://mongodb:27017/rocketchat?replicaSet=rs0
      MONGO_OPLOG_URL: mongodb://mongodb:27017/local?replicaSet=rs0
      
      DEPLOY_METHOD: docker
      ROOT_URL: http://rocketchat.${BASE_DOMAIN:-docker.localhost}
      # ROOT_URL: ${ROOT_URL:-http://localhost:${HOST_PORT:-3000}}

    volumes:
      - rocketchat_uploads:/app/uploads

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rocketchat.rule=Host(`rocketchat.${BASE_DOMAIN:-docker.localhost}`)"
      - "traefik.http.routers.rocketchat.rule=PathPrefix(`/`)"
      - "traefik.http.routers.rocketchat.service=rocketchat"
      - "traefik.http.services.rocketchat.loadbalancer.server.port=3000"
      - "traefik.http.services.rocketchat.loadbalancer.passhostheader=true"
      - "traefik.http.routers.rocketchat.middlewares=compresstraefik"
      - "traefik.http.middlewares.compresstraefik.compress=true"

    # ports:
    #   - 3001-3003:3000

    deploy:
      mode: replicated
      replicas: ${ROCKET_INSTANCES:-1}
      placement:
        constraints:
          - node.role == worker
    networks:
      - rocketchat_net



###########################
  traefik-reverse-proxy:
    image: traefik:v2.10
    restart: always
    command:
      - "--log.level=WARN"
      - "--accesslog=false"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--global.checkNewVersion=false"
      - "--global.sendAnonymousUsage=false"

    ports:
      - "80:80"

    labels:
        - "traefik.enable=true"
        # Dashboard entrypoint
        - "traefik.http.routers.dashboard.rule=Host(`traefik.${BASE_DOMAIN:-docker.localhost}`)"
        - "traefik.http.routers.dashboard.service=api@internal"
        - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
        - "traefik.http.services.dashboard.loadbalancer.passhostheader=true"
        - "traefik.http.routers.dashboard.middlewares=authtraefik"
        # Basic Authentication for Traefik Dashboard
        - "traefik.http.middlewares.authtraefik.basicauth.users=${TRAEFIK_BASE_AUTH}"
       
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

    networks:
      - rocketchat_net

    logging:
      options:
        max-size: "10m"

###########################
  prometheus:
    image: quay.io/prometheus/prometheus:v2.16.0
    restart: unless-stopped
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - '--storage.tsdb.retention.time=2w'
      - '--storage.tsdb.path=/prometheus'
    volumes:
      - prometheus_data:/prometheus
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.${BASE_DOMAIN:-docker.localhost}`)"
      - "traefik.http.routers.prometheus.service=prometheus-service"
      - "traefik.http.services.prometheus-service.loadbalancer.server.port=9090"
    depends_on:
      - rocketchat
    networks:
      - rocketchat_net

###########################     
  grafana:
    image: grafana/grafana:6.6.2
    restart: unless-stopped
    volumes:
      - ./config/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./config/grafana/provisioning/dashboards/provider:/etc/grafana/provisioning/dashboards:ro
      - ./config/grafana/provisioning/dashboards/json-exports:/var/lib/grafana/dashboards:ro
    

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.${BASE_DOMAIN:-docker.localhost}`)"
      - "traefik.http.routers.grafana.service=grafana-service"
      - "traefik.http.services.grafana-service.loadbalancer.server.port=3000"
    depends_on:
      - prometheus
    networks:
      - rocketchat_net

#############################

  mongo-ex:
    image: mongo-express
    restart: always
    ports:
      - 8089:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      # ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
      # ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASS}
      # ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_BASICUSER}
      # ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_BASICPASS}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mongo.rule=Host(`mongo.${BASE_DOMAIN:-docker.localhost}`)"
      - "traefik.http.routers.mongo.service=mongo-service"
      - "traefik.http.services.mongo-service.loadbalancer.server.port=8081"
    depends_on:
      - mongodb
    networks:
      - rocketchat_net
        # ipv4_address: ${MONGOEX_IPV4}